name: Infra setup pipeline

on:
  push:
    branches:
      - master 
    paths:
    - "gcp/**"
    

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}             
  TF_BUCKET: ${{ secrets.TF_BUCKET }} # <-- GCS bucket for TF state
  TF_PREFIX: terraform/state 
  SERVICE_NAME: icliniq-project-cloud-run
  

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GCP authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker $GCP_REGION-docker.pkg.dev --quiet

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.0

      - name: Terraform Init
        working-directory: gcp
        run: |
          terraform init \
          -backend-config="bucket=${{ secrets.TF_BUCKET }}" \
          -backend-config="prefix=terraform/state" \

      - name: Terraform FMT Check
        working-directory: gcp
        run: terraform fmt -recursive

      - name: Terraform Validate
        working-directory: gcp
        run: terraform validate

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Run TFLint
        working-directory: gcp
        run: |
          tflint --init
          tflint || true

      - name: Run tfsec + upload SARIF
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          working_directory: gcp
          sarif_file: tfsec-results.sarif

      - name: Terraform Plan
        working-directory: gcp
        run: terraform plan -out=tfplan -var="slack_token=${{secrets.SLACK_TOKEN}}"

      - name: Terraform Apply
        working-directory: gcp
        run: terraform apply -auto-approve -var="slack_token=${{secrets.SLACK_TOKEN}}"